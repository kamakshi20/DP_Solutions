class Solution {
    int func(int[] nums){
        int n = nums.length;
        int[] dp = new int[n];
        dp[0] = nums[0];
        int negative_ind = 0;
        int max =nums[0];

        for(int i=1; i<n; i++){

            int take = nums[i];
            if(i > 1)      
                take += dp[i - 2];

            int not_take = 0 + dp[i - 1];

            dp[i] = Math.max(take, not_take);
            max = Math.max(max,dp[i]);
        }
        return max;
    }
    public int rob(int[] nums) {
        
        int n = nums.length;

        if(n == 0)      return 0;
        if(n == 1)      return nums[0];

        int[] arr1 = new int[n - 1];
        int[] arr2 = new int[n - 1];
        int k = 0;
        int m = 0;

        for(int i=0; i<n; i++){
            if(i != 0)  arr1[k++] = nums[i];
            if(i != n-1 )    arr2[m++] = nums[i];
        }        

        int ans = Math.max(func(arr1), func(arr2));

        return ans;
    }
}
